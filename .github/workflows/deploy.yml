name: Deploy and Publish

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Sync version with npm
        run: |
          # Get current local version
          LOCAL_VERSION=$(node -p "require('./package.json').version")
          echo "Local version: $LOCAL_VERSION"
          
          # Get latest version from npm
          NPM_VERSION=$(npm view ui-wamly-package version 2>/dev/null || echo "0.0.0")
          echo "NPM version: $NPM_VERSION"
          
          # Compare versions and update if needed
          if [ "$LOCAL_VERSION" = "$NPM_VERSION" ]; then
            echo "Versions match, patching..."
            npm version patch --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "New version: $NEW_VERSION"
          elif [ "$(printf '%s\n' "$LOCAL_VERSION" "$NPM_VERSION" | sort -V | head -n1)" = "$LOCAL_VERSION" ]; then
            echo "Local version ($LOCAL_VERSION) is older than npm ($NPM_VERSION), updating to npm version..."
            npm version $NPM_VERSION --no-git-tag-version
            npm version patch --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "New version: $NEW_VERSION"
          else
            echo "Local version ($LOCAL_VERSION) is newer than npm ($NPM_VERSION), using local version"
          fi

      - name: Publish to NPM
        run: |
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Storybook
        run: npm run build-storybook

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./storybook-static

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
